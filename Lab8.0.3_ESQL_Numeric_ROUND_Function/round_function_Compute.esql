

CREATE COMPUTE MODULE round_function_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE a FLOAT ROUND(27.75,2); --returns 27.75
		DECLARE b FLOAT ROUND(27.75,1); -- returns 27.8
		DECLARE c FLOAT ROUND(27.75, -1); --returns 30.0
		DECLARE y FLOAT ROUND(23.23, -1);
		DECLARE z FLOAT ROUND(27.75, -2);
		
		DECLARE d FLOAT ROUND(5.55, 0 MODE ROUND_UP); -- returns 6.0
		DECLARE e FLOAT ROUND(5.55, 0 MODE ROUND_DOWN); -- returns 5.0
		DECLARE f FLOAT ROUND(5.55, 0 MODE ROUND_CEILING); -- returns 6.0
		DECLARE g FLOAT ROUND(5.55, 0 MODE ROUND_FLOOR); --returns 5.0
		DECLARE h FLOAT ROUND(5.55, 0 MODE ROUND_HALF_UP); -- returns 6.0
		DECLARE k FLOAT ROUND(5.55, 1 MODE ROUND_HALF_DOWN); -- returns 5.5
		DECLARE l FLOAT ROUND(5.55, 0 MODE ROUND_HALF_EVEN); -- returns 6.0
		
		SET OutputRoot.XMLNSC.result.a = a;
		SET OutputRoot.XMLNSC.result.b = b;
		SET OutputRoot.XMLNSC.result.c = c;
		SET OutputRoot.XMLNSC.result.d = d;
		SET OutputRoot.XMLNSC.result.e = e;
		SET OutputRoot.XMLNSC.result.f = f;
		SET OutputRoot.XMLNSC.result.g = g;
		SET OutputRoot.XMLNSC.result.h = h;
		SET OutputRoot.XMLNSC.result.k = k;
		SET OutputRoot.XMLNSC.result.l = l;
	END;
END MODULE;
-- HELLO EIDIK__
